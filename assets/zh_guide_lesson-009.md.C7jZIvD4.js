import{_ as s,c as a,o as i,a6 as n}from"./chunks/framework.B2LRalDI.js";const g=JSON.parse('{"title":"课程 9 - 手绘风格","description":"","frontmatter":{"outline":"deep"},"headers":[],"relativePath":"zh/guide/lesson-009.md","filePath":"zh/guide/lesson-009.md"}'),e={name:"zh/guide/lesson-009.md"},t=n(`<h1 id="课程-9-手绘风格" tabindex="-1">课程 9 - 手绘风格 <a class="header-anchor" href="#课程-9-手绘风格" aria-label="Permalink to &quot;课程 9 - 手绘风格&quot;">​</a></h1><p>除了拖拽画布，</p><h2 id="拖拽图形" tabindex="-1">拖拽图形 <a class="header-anchor" href="#拖拽图形" aria-label="Permalink to &quot;拖拽图形&quot;">​</a></h2><p>无限画布通常都支持很多模式，例如选择模式、手型模式、记号笔模式等等。不同模式下同样的交互动作对应不同的操作。例如选择模式下，在画布上拖拽对应框选操作；在手型模式下会拖拽整个画布；记号笔模式下则是自由绘制笔迹。</p><p>让我们为画布增加选择和手型模式：</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> enum</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> CanvasMode</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    SELECT</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    HAND</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Canvas</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">    #mode</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> CanvasMode</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    setMode</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">mode</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> CanvasMode</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div>`,6),h=[t];function l(p,k,d,r,o,E){return i(),a("div",null,h)}const _=s(e,[["render",l]]);export{g as __pageData,_ as default};
